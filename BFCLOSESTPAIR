package TugasBF_DNC;
import java.util.*;
public class BFCLOSESTPAIR {

    public static void main(String[] args) {
        BFCLOSESTPAIR m = new BFCLOSESTPAIR();
        Scanner in = new Scanner(System.in);
        List<Point> list = new ArrayList<>();
        
        
        int x, y = 0;
        int B, C;
        Random randomGenerator = new Random();
        
        String pilihan[] = {"1", "01", "random"};
        List<String> pilihannya = Arrays.asList(pilihan);
        
        String pilihan1[] = {"2", "02", "user"};
        List<String> pilihannya1 = Arrays.asList(pilihan1);
        
        System.out.print("Hai, Masukkan Pilihan mu\n 1. Ingin Random Number\n 2. Ingin Inputan User\nInputan Anda : ");
        String pilihanmu = in.nextLine().toLowerCase();
        
        if(pilihannya.contains(pilihanmu)){   
            //RANDOM VALUE SECTION
            Point[] A = new Point[1000];
            System.out.println();
            for (B = 0; B<A.length; B++){
                x = randomGenerator.nextInt(3000);
                System.out.println("Titik X ke " +(B+1) + " : " + x);
                for (C = 0; C<=B;C++){
                    y = randomGenerator.nextInt(3000);
                    System.out.println("Titik Y ke " +(B+1) + " : "  + y);
                    break;
                }
                    A[B] = new Point(x, y);
                    list.add(A[B]);
                    System.out.println();
            }

            //bagian menampilkan output
            System.out.print("The Closest Point is ");
            List<Point> result = m.mindistance(list);
            m.display(result);
            System.out.println("and the distance between the closest points is "+Math.sqrt(m.getDistance(result.get(0), result.get(1))));
        }
        else if (pilihannya1.contains(pilihanmu)){
            //USER VALUE SECTION
            System.out.println("\nMasukkan Panjang Array");
            int d = in.nextInt();
            Point[] A = new Point[d];
            for (B = 0; B<A.length; B++){
                System.out.print("Titik X ke " +(B+1) + " : ");
                x = in.nextInt();
                for (C = 0; C<=B;C++){
                    System.out.print("Titik Y ke " +(B+1) + " : " );
                    y = in.nextInt();
                    break;
                }
                    A[B] = new Point(x, y);
                    list.add(A[B]);
                    System.out.println();
            }

            //bagian menampilkan output
            System.out.print("The Closest Point is ");
            List<Point> result = m.mindistance(list);
            m.display(result);
            System.out.println("and the distance between the closest points is "+Math.sqrt(m.getDistance(result.get(0), result.get(1))));
        }
        else main(null);
    }
    
    //Brute Force Function
    public static class Point {
        private final int x;
        private final int y;
        public Point(int x, int y) {
            this.x = x;
            this.y = y;
        }
    }
    public List<Point> mindistance(List<Point> list){
        if(list==null || list.isEmpty()) return new ArrayList<>();
        List<Point> result = new ArrayList<>();
        int n = list.size();
        int min = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int distance = getDistance(list.get(i), list.get(j));
                if(min>distance || result.isEmpty()){
                    result.clear();
                    result.add(list.get(i));
                    result.add(list.get(j));
                    min = distance;
                }
            }
        }
        return result;
    }
    public int getDistance(Point a, Point b){
        int x = a.x - b.x;
        int y = a.y - b.y;
        return x*x + y*y;
    }
    public void display(List<Point> list){
        Point a = list.get(0);
        Point b = list.get(1);
        System.out.print("{"+a.x+","+a.y+"}");
        System.out.print("{"+b.x+","+b.y+"}");
        System.out.println(" ");
    }
}
